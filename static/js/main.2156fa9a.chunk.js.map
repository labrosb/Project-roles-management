{"version":3,"sources":["assets/icons/loading.svg","state/reducers/index.js","state/reducers/projectUsersMap.js","state/actions/types.js","state/reducers/projects.js","state/reducers/users.js","state/reducers/roles.js","state/reducers/error.js","state/store.js","theme/colors.js","theme/fonts.js","components/Main/Text.js","components/Main/Labels.js","theme/layout.js","components/ProjectRoles/ProjectSelector.js","components/Main/GroupSelector/Selector.js","components/Main/GroupSelector/Options.js","components/Main/GroupSelector/index.js","components/Main/Modal.js","components/ProjectRoles/RolesForm/UserSelector.js","components/ProjectRoles/RolesForm/UserList/UserTag.js","components/ProjectRoles/RolesForm/UserList/index.js","components/ProjectRoles/RolesForm/RoleGroups/AddUserButton.js","components/ProjectRoles/RolesForm/RoleGroups/index.js","components/Main/DynamicError.js","components/ProjectRoles/RolesForm/index.js","components/Main/Header.js","components/Loading.js","components/Error.js","utilities/devApi.js","state/actions/error.js","state/actions/projectUsers.js","utilities/serverApi.js","utilities/api.js","state/actions/listings.js","state/actions/index.js","state/connector.js","components/ProjectRoles/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","reducers","projectUsersMap","state","action","type","list","augmentedUsers","project","role","augmenterUsersMap","AllUsers","push","user","id","name","reducedUsers","reducedUsersMap","splice","roleIndex","userId","projects","users","roles","error","errorType","config","key","whitelist","storage","reducer","persistCombineReducers","initialState","lists","projectRoles","rootReducer","middlewares","thunk","store","enhancer","compose","applyMiddleware","createStore","configureStore","persistStore","primary","primaryContrast","secondary","special","text","textDark","formPrimary","formSecondary","fade","background","fontDefault","require","fontSelector","fontSizeBig","fontSizeMed","fontSizeSmall","Text","styled","p","font","props","size","fontSize","color","colors","align","getColor","H1","h1","H2","h2","Title","mediaQueries","Selector","div","Choice","React","memo","onSelected","map","onClick","boobleUpProject","Select","active","Label","span","fonts","selected","IconContainer","Icon","FontAwesomeIcon","selectedOption","placeHolder","icon","faChevronDown","defaultProps","Options","OptionsGroup","Option","disabled","OptionsList","data","onSelect","show","renderOptionList","useCallback","options","option","label","value","onOptionSelect","renderGroups","useMemo","renderLabel","Container","GroupSelect","placeholder","groupSelectRef","useRef","useState","setSelectedOption","showList","handleClick","target","current","contains","useEffect","document","addEventListener","removeEventListener","ref","Modal","setAppElement","ExitButton","defaultStyles","position","left","right","width","height","margin","boxSizing","backgroundColor","overflow","ModalComponent","title","isOpen","close","children","styles","modalStyles","content","overlay","contentLabel","style","onRequestClose","shouldCloseOnOverlayClick","faTimesCircle","UserSelector","onClose","projectUsers","selectionData","unavailableOptions","availableOptions","forEach","listUser","length","onUserSelect","GroupSelector","Content","RemoveIcon","UserTag","remove","index","onRemoveClick","Item","removeUser","removeItem","item","Button","ButtonIcon","AddButton","onButtonClick","faPlusCircle","RoleField","ListContainer","onAddClicked","ErrorIcon","DynamicMessage","message","expanded","AltContent","RolesForm","addUser","userSelector","showUserSelector","roleForUser","setRoleForUser","closeUserSelector","onUserSelected","DynamicError","HeaderContainer","header","Header","SpinnerIcon","img","LoadingContent","src","loadingSpinner","alt","Error","responses","Admin","Editor","Viewer","Marketplace","status","API","get","link","Promise","resolve","post","delete","setError","errorMsg","resetError","dispatch","getState","setProjectUsersMap","projectId","body","Api","then","res","addProjectUser","catch","projectName","roleName","removeProjectUser","devApi","errors","getProjectLists","setRoles","setUsers","newMap","oldMap","oldMapArr","Object","keys","newMapArr","findIndex","mapExists","ActionCreators","listings","ReduxConnector","component","connect","bindActionCreators","Actions","setProject","listsReceived","setListsReceived","Loading","App","exact","path","process","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.2156fa9a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.4e722e12.svg\";","import projectUsersMap from './projectUsersMap';\nimport projects from './projects';\nimport users from './users';\nimport roles from './roles';\nimport error from './error';\n\nconst reducers = {\n  projectUsersMap,\n  projects,\n  users,\n  roles,\n  error\n};\n\nexport default reducers;\n","import * as types from '../actions/types';\n\n// Can be restructured to reduce the tree levels:\n// The project and role level can be merged to a projectName_roleName field\n\nexport default function projectTeams(state = null, action) {\n  switch (action.type) {\n    case types.SET_PROJECT_MAP:\n      return action.list;\n\n    case types.ADD_PROJECT_USER:\n      const augmentedUsers = [...state[action.project][action.role]];\n      const augmenterUsersMap = { ...state[action.project].AllUsers };\n\n      augmentedUsers.push(action.user);\n      augmenterUsersMap[action.user.id] = {\n        name: action.user.name,\n        role: action.role\n      };\n\n      return {\n        ...state,\n        [action.project]: {\n          ...state[action.project],\n          AllUsers: augmenterUsersMap,\n          [action.role]: augmentedUsers\n        }\n      };\n\n    case types.REMOVE_PROJECT_USER:\n      const reducedUsers = [...state[action.project][action.role]];\n      const reducedUsersMap = { ...state[action.project].AllUsers };\n\n      reducedUsers.splice(action.roleIndex, 1);\n\n      delete reducedUsersMap[action.userId];\n\n      return {\n        ...state,\n        [action.project]: {\n          ...state[action.project],\n          AllUsers: reducedUsersMap,\n          [action.role]: reducedUsers\n        }\n      };\n\n    default:\n      return state;\n  }\n}\n","export const ADD_PROJECT_USER = 'ADD_PROJECT_USER';\nexport const REMOVE_PROJECT_USER = 'REMOVE_PROJECT_USER';\nexport const SET_PROJECT_MAP = 'SET_PROJECT_MAP';\n\n// Listings actions\nexport const SET_ROLE_LIST = 'SET_ROLE_LIST';\nexport const SET_USER_LIST = 'SET_USER_LIST';\nexport const SET_PROJECT_LIST = 'SET_PROJECT_LIST';\n\nexport const SET_ERROR = 'SET_ERROR';\n","import * as types from '../actions/types';\n\nexport default function projects(state = null, action) {\n  switch (action.type) {\n    case types.SET_PROJECT_LIST:\n      return action.list;\n\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions/types';\n\nexport default function users(state = null, action) {\n  switch (action.type) {\n    case types.SET_USER_LIST:\n      return action.list;\n\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions/types';\n\nexport default function roles(state = null, action) {\n  switch (action.type) {\n    case types.SET_ROLE_LIST:\n      return action.list;\n\n    default:\n      return state;\n  }\n}\n","import * as types from '../actions/types';\n\nexport default function error(state = null, action) {\n  switch (action.type) {\n    case types.SET_ERROR:\n      return { ...state, [action.errorType]: action.error };\n\n    default:\n      return state;\n  }\n}\n","import { createStore, compose, applyMiddleware } from 'redux';\nimport { persistCombineReducers, persistStore } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\n\nconst config = {\n  key: 'root',\n  whitelist: ['projectUsersMap'],\n  storage\n};\n\nconst reducer = persistCombineReducers(config, reducers);\n\nconst initialState = {\n  users: [],\n  roles: [],\n  projects: [],\n  projectUsersMap: {},\n  error: {\n    lists: null,\n    projectRoles: null\n  }\n};\n\nconst rootReducer = (state, action) => reducer(state, action);\n\nconst middlewares = [thunk];\n\n// Use redux-logger only on development mode\nif (process.env.NODE_ENV === 'development') {\n  const { logger } = require('redux-logger'); // eslint-disable-line\n\n  middlewares.push(logger);\n}\n\n// Configure a store that uses the defined middlewares\nfunction configureStore() {\n  const enhancer = compose(\n    applyMiddleware(...middlewares)\n  );\n\n  return createStore(rootReducer, initialState, enhancer);\n}\n\nconst store = configureStore();\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","export default {\n  primary: '#004257',\n  primaryContrast: '#ffff',\n\n  secondary: '#E6EBED',\n\n  special: '#4b5d73', // rgb(75, 93, 115)\n\n  text: '#4b5d73',\n  textDark: '#273f5b',\n\n  error: '#e08c8c',\n\n  formPrimary: '#808080',\n  formSecondary: '#A69999',\n  fade: '#CCCCCC',\n\n  background: '#ffff'\n};\n","const roboto = require('typeface-roboto');\n\nexport default {\n  fontDefault: roboto,\n  fontSelector: 'Segoe UI',\n\n  fontSizeBig: '1.6em',\n  fontSizeMed: '1.2em',\n  fontSizeSmall: '1em'\n};\n","import styled from 'styled-components';\nimport colors from '../../theme/colors';\nimport font from '../../theme/fonts';\n\nfunction getSize(size) {\n  if (size === 'small') return font.fontSizeSmall;\n  if (size === 'big') return font.fontSizeBig;\n  return size;\n}\n\nfunction getColor(color) {\n  return colors[color] || color;\n}\n\nconst Text = styled.p`\n  font-family: ${font.fontDefault};\n  font-size: ${props => (props.size ? getSize(props.size) : font.fontSize)};\n  color: ${props => (props.color ? getColor(props.color) : colors.text)};\n  text-align: ${props => props.align || 'left'};\n`;\n\nexport default Text;\n","import styled from 'styled-components';\nimport colors from '../../theme/colors';\nimport font from '../../theme/fonts';\n\nfunction getColor(color) {\n  return colors[color] || color;\n}\n\nexport const H1 = styled.h1`\n  font-family: ${font.fontDefault};\n  font-size: ${font.fontSizeBig};\n  font-weight: 500;\n  text-transform: uppercase;\n  color: ${props => (props.color ? getColor(props.color) : colors.text)};\n  text-align: ${props => props.align || 'center'};\n`;\n\nexport const H2 = styled.h2`\n  font-family: ${font.fontDefault};\n  font-size: ${font.fontSizeMed};\n  font-weight: 400;\n  text-transform: uppercase;\n  color: ${props => (props.color ? getColor(props.color) : colors.text)};\n  text-align: ${props => props.align || 'center'};\n`;\n","export default {\n  p1: '1000px',\n  p2: '700px'\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Text from '../Main/Text';\nimport { H2 } from '../Main/Labels';\nimport colors from '../../theme/colors';\nimport mediaQueries from '../../theme/layout';\n\nconst Title = styled(H2)`\n  @media (max-width: ${mediaQueries.p2}) {\n    display: none;\n  };\n`;\n\nconst Selector = styled.div`\n  position: absolute;\n  right: 0;\n  margin-top: 50px;\n  overflow: auto;\n  @media (max-width: ${mediaQueries.p1}) {\n    position: static;\n  };\n  @media (max-width: 700px) {\n    display: flex;\n    margin: 24px auto 0 auto;\n    max-width: 100%;\n  };\n`;\n// Exported for testing\nexport const Choice = styled.div`\n  display: flex;\n  align-items: center;\n  white-space: nowrap;\n  margin-bottom: 12px;\n  padding: 0 22px;\n  border: 1px solid ${colors.special};\n  background-color: ${colors.special};\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n  cursor: pointer;\n  &::before {\n    content: '▶';\n    color: ${colors.background};\n    font-size: 12px;\n    margin-right: 14px;\n  };\n  &:hover {\n    background-color: ${colors.primary};\n  };\n  @media (max-width: ${mediaQueries.p2}) {\n    border-radius: 10px;\n    margin: 0 4px;\n    &::before { content: ''};\n`;\n\nfunction ProjectSelector({ projects, onSelected }) {\n  const boobleUpProject = project => {\n    onSelected(project);\n  };\n  const renderChoices = () => (\n    projects.map(project => (\n      <Choice\n        key={`choice-${project.id}`}\n        onClick={() => boobleUpProject(project)}\n      >\n        <Text color={colors.background}>\n          {project.name}\n        </Text>\n      </Choice>\n    ))\n  );\n\n  return (\n    <Selector>\n      <Title>Projects</Title>\n      {renderChoices()}\n    </Selector>\n  );\n}\n\nexport default React.memo(ProjectSelector);\n\nProjectSelector.propTypes = {\n  projects: PropTypes.array.isRequired,\n  onSelected: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faChevronDown } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport colors from '../../../theme/colors';\nimport fonts from '../../../theme/fonts';\n\nexport const Select = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 6px 10px;\n  box-sizing: border-box;\n  border: 1px solid ${colors.fade};\n  border-radius: 4px;\n  box-shadow: ${props => (\n    props.active ? '0 0 1px 1px rgba(75, 93, 115, 0.4)' : 'none'\n  )};\n  cursor: pointer;\n`;\n\nexport const Label = styled.span`\n  font-family: ${fonts.fontSelector};\n  font-size: 16px;\n  color: ${props => (props.selected ? colors.text : colors.formPrimary)};\n`;\n\nconst IconContainer = styled.div`\n  position: absolute;\n  right: 0;\n  top: 0;\n  bottom: 0;\n  display: flex;\n`;\n\nconst Icon = styled(FontAwesomeIcon)`\n  font-size: 14px;\n  color: ${props => (props.active ? colors.special : colors.fade)};\n  margin: auto;\n  padding: 4px 12px;\n  border-left: 1px solid ${colors.fade};\n`;\n\nfunction Selector({ active, selectedOption, placeHolder }) {\n  return (\n    <Select {...{ active }}>\n      <Label selected={!!selectedOption}>\n        { selectedOption || placeHolder}\n      </Label>\n      <IconContainer>\n        <Icon\n          icon={faChevronDown}\n          {...{ active }}\n        />\n      </IconContainer>\n    </Select>\n  );\n}\n\nSelector.propTypes = {\n  active: PropTypes.number, // boolean\n  selectedOption: PropTypes.string,\n  placeHolder: PropTypes.string\n};\n\nSelector.defaultProps = {\n  placeHolder: 'Select...'\n};\n\nexport default React.memo(Selector);\n","import React, { useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport colors from '../../../theme/colors';\n\nconst Options = styled.div`\n  margin-top: 8px;\n  padding: 6px 0;\n  background-color: ${colors.background};\n  box-shadow: 0 0 0 1px rgba(0, 0, 0, 0.1), 0 4px 11px rgba(0, 0, 0, 0.1);\n  border-radius: 4px;\n  z-index: -1;\n`;\n\nexport const OptionsGroup = styled.div``;\n\nexport const Option = styled.div`\n  padding: 6px 10px;\n  color: ${props => (props.disabled ? colors.fade : colors.text)};\n  cursor: ${props => (props.disabled ? 'default' : 'pointer')};\n  &:hover {\n    background-color: ${props => (props.disabled ? 'none' : '#d9e5f5')};\n  };\n`;\n\nexport const Label = styled.div`\n  font-size: 12px;\n  font-weight: 500;\n  text-transform: uppercase;\n  color: ${colors.formSecondary};\n  padding: 6px 10px;\n  cursor: default;\n`;\n\nconst renderLabel = label => (\n  <Label disabled>{label}</Label>\n);\n\nfunction OptionsList({ data, onSelect, show }) {\n  const renderOptionList = useCallback(options => {\n    const onOptionSelect = ({ label, value }) => {\n      onSelect(label, value);\n    };\n\n    return options.map(option => (\n      <Option\n        key={`option-${option.label}`}\n        disabled={option.disabled}\n        onClick={() => onOptionSelect(option)}\n      >\n        {option.label}\n      </Option>\n    ));\n  }, [onSelect]);\n\n  const renderGroups = useMemo(() => (\n    data.map(type => {\n      const { options, label } = type;\n      return (\n        <OptionsGroup key={`group-${label}`}>\n          {renderLabel(label)}\n          {renderOptionList(options)}\n        </OptionsGroup>\n      );\n    })\n  ), [data, renderOptionList]);\n\n  if (show) {\n    return (\n      <Options>\n        {renderGroups}\n      </Options>\n    );\n  }\n  return null;\n}\n\nOptionsList.propTypes = {\n  show: PropTypes.bool,\n  data: PropTypes.array,\n  onSelect: PropTypes.func\n};\n\nOptionsList.defaultProps = {\n  data: [],\n  onSelect: () => null\n};\n\nexport default OptionsList;\n","import React, { useRef, useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Selector from './Selector';\nimport Options from './Options';\n\n/* Inspired by react-select (react-select.com) which was originally\n  planned to be used but throws a number of deprecated methods warnings */\n\nconst Container = styled.div`\n  width: 100%;\n`;\n\nfunction GroupSelect({ placeholder, data, onSelect }) {\n  const groupSelectRef = useRef();\n\n  const [selectedOption, setSelectedOption] = useState();\n  const [list, showList] = useState(false);\n\n  const onOptionSelect = useCallback((label, value) => {\n    setSelectedOption(label);\n    onSelect(value);\n    showList(false);\n  }, [onSelect]);\n\n  const handleClick = ({ target }) => {\n    // If clicked in or out of component\n    if (groupSelectRef.current.contains(target)) {\n      showList(true);\n    } else {\n      showList(false);\n    }\n  };\n\n  useEffect(() => {\n    // Method to trigger click in/out of component\n    document.addEventListener('mousedown', handleClick);\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, []);\n\n  return (\n    <Container ref={groupSelectRef}>\n      <Selector\n        active={list ? 1 : 0}\n        placeholder={placeholder}\n        {...{ selectedOption }}\n      />\n      <Options\n        show={list}\n        onSelect={onOptionSelect}\n        {...{ data }}\n      />\n    </Container>\n  );\n}\n\nGroupSelect.propTypes = {\n  placeholder: PropTypes.string,\n  onSelect: PropTypes.func,\n  data: PropTypes.array\n};\n\nGroupSelect.defaultProps = {\n  onSelect: () => null\n};\n\nexport default React.memo(GroupSelect);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport Modal from 'react-modal';\nimport styled from 'styled-components';\nimport colors from '../../theme/colors';\n\nModal.setAppElement('body');\n\n// Exported for testing\nexport const ExitButton = styled(FontAwesomeIcon)`\n  position: absolute;\n  right: -5px;\n  top: -5px;\n  font-size: 18.5px;\n  color: ${colors.background};\n  background-color: ${colors.formPrimary};\n  border: 1px solid #CCCCCC;\n  border-radius: 50%;\n  cursor: pointer;\n`;\n// Exported for testing\nexport const Title = styled.p`\n  font-size: 1em;\n  color: ${colors.primary};\n  margin: 0 4px 8px 4px;\n`;\n\nconst defaultStyles = {\n  content: {\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    width: '320px',\n    height: '114px',\n    margin: 'auto',\n    boxSizing: 'border-box',\n    backgroundColor: 'rgba(255, 255, 255, 0.98)',\n    overflow: 'visible'\n  },\n  overlay: {\n    backgroundColor: 'transparent'\n  }\n};\n\nfunction ModalComponent({ title, isOpen, close, children, styles }) {\n  const modalStyles = {\n    content: {\n      ...defaultStyles.content,\n      ...styles.content\n    },\n    overlay: {\n      ...defaultStyles.overlay,\n      ...styles.overlay\n    }\n  };\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentLabel=\"Select User\"\n      style={modalStyles}\n      onRequestClose={close}\n      shouldCloseOnOverlayClick\n    >\n      <ExitButton\n        icon={faTimesCircle}\n        onClick={close}\n      />\n      <Title>{title}</Title>\n      {children}\n    </Modal>\n  );\n}\n\nexport default ModalComponent;\n\nModalComponent.propTypes = {\n  isOpen: PropTypes.bool.isRequired,\n  close: PropTypes.func,\n  title: PropTypes.string,\n  styles: PropTypes.object,\n  children: PropTypes.any\n};\n\nModalComponent.defaultProps = {\n  styles: {}\n};\n","import React, { useMemo, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport GroupSelector from '../../Main/GroupSelector';\nimport Modal from '../../Main/Modal';\n\n/* Component renders a modal with a custom select */\n\nfunction UserSelector({\n  title,\n  isOpen,\n  onClose,\n  onSelect,\n  projectUsers,\n  users\n}) {\n  const selectionData = useMemo(() => {\n    const unavailableOptions = [];\n    const availableOptions = [];\n\n    users.forEach(user => {\n      const listUser = projectUsers.AllUsers[user.id];\n\n      if (listUser) {\n        unavailableOptions.push({\n          value: user,\n          label: `${user.name} (${listUser.role})`,\n          disabled: true\n        });\n      } else {\n        availableOptions.push({ value: user, label: user.name });\n      }\n    });\n\n    if (availableOptions.length === 0) {\n      return [{\n        label: 'Unavailable',\n        options: unavailableOptions\n      }];\n    }\n    if (unavailableOptions.length > 0) {\n      return [{\n        label: 'Available',\n        options: availableOptions\n      }, {\n        label: 'Unavailable',\n        options: unavailableOptions\n      }];\n    }\n    return [{ options: availableOptions }];\n  }, [projectUsers, users]);\n\n  const onUserSelect = useCallback(user => {\n    onSelect(user);\n  }, [onSelect]);\n\n  return (\n    <Modal\n      title={title}\n      isOpen={isOpen}\n      close={onClose}\n    >\n      <GroupSelector\n        data={selectionData}\n        onSelect={onUserSelect}\n      />\n    </Modal>\n  );\n}\n\nexport default React.memo(UserSelector);\n\nUserSelector.propTypes = {\n  title: PropTypes.string,\n  isOpen: PropTypes.bool,\n  onClose: PropTypes.func,\n  onSelect: PropTypes.func,\n  projectUsers: PropTypes.object,\n  users: PropTypes.array\n};\n\nUserSelector.defaultProps = {\n  users: []\n};\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport Text from '../../../Main/Text';\nimport colors from '../../../../theme/colors';\n\nconst Content = styled.div`\n  display: flex;\n  align-items: center;\n  padding-left: 12px;\n  padding-right: 12px;\n  border-radius: 8px;\n  background-color: ${colors.special};\n`;\n// Exported for testing\nexport const RemoveIcon = styled(FontAwesomeIcon)`\n  font-size: 14.5px;\n  color: ${colors.secondary};\n  margin-top: 2px;\n  margin-left: 8px;\n  cursor: pointer;\n`;\n\nfunction UserTag({ id, name, remove, index }) {\n  const onRemoveClick = useCallback(() => (\n    remove(id, index)\n  ), [remove, id, index]);\n\n  return (\n    <Content>\n      <Text\n        size=\"0.85em\"\n        color={colors.secondary}\n      >\n        {name}\n      </Text>\n      <RemoveIcon\n        icon={faTimesCircle}\n        onClick={onRemoveClick}\n      />\n    </Content>\n  );\n}\n\nexport default UserTag;\n\nUserTag.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  index: PropTypes.number.isRequired,\n  remove: PropTypes.func.isRequired\n};\n","import React, { useCallback } from 'react';\nimport styled from 'styled-components';\nimport UserTag from './UserTag';\n\n/* Component renders the tags list */\n\nconst Item = styled.div`\n  margin: 2.5px;\n`;\n\nfunction UserList({ list, removeUser, project, role }) {\n  const removeItem = useCallback((id, index) => {\n    // Redux: Id is used to remove user from the users map, by key\n    // and index to delete user from the roles array avoiding loops\n    removeUser(id, project, role, index);\n  }, [removeUser, project, role]);\n\n  if (list) {\n    return list.map((item, index) => (\n      <Item key={`user-${item.id}`}>\n        <UserTag\n          id={item.id}\n          name={item.name}\n          remove={removeItem}\n          {...{ index }}\n        />\n      </Item>\n    ));\n  }\n\n  return null;\n}\n\nexport default React.memo(UserList);\n","import React, { useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons';\nimport Text from '../../../Main/Text';\nimport colors from '../../../../theme/colors';\n\nconst Button = styled.div`\n  display: flex;\n  align-items: center;\n  padding: 0 12px;\n  margin: 2.5px;\n  border-radius: 8px;\n  background-color: ${colors.special};\n  cursor: pointer;\n  &:hover {\n    background-color: ${colors.primary};\n  };\n`;\n\nconst ButtonIcon = styled(FontAwesomeIcon)`\n  font-size: 14.5px;\n  color: ${colors.secondary};\n  margin-top: 2px;\n  margin-left: 8px;\n`;\n\nfunction AddButton({ label, action, item }) {\n  const onButtonClick = useCallback(() => {\n    action(item);\n  }, [action, item]);\n\n  return (\n    <Button onClick={onButtonClick}>\n      <Text\n        size=\"0.85em\"\n        color={colors.secondary}\n      >\n        {label}\n      </Text>\n      <ButtonIcon icon={faPlusCircle} />\n    </Button>\n  );\n}\n\nexport default AddButton;\n\nAddButton.propTypes = {\n  label: PropTypes.string.isRequired,\n  item: PropTypes.any.isRequired,\n  action: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport UserList from '../UserList';\nimport AddButton from './AddUserButton';\nimport Text from '../../../Main/Text';\n\n/* Component renders user selection fields for each role */\n\nconst RoleField = styled.div``;\n\nconst Label = styled(Text)`\n  margin-left: 6px;\n`;\n\nconst ListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`;\n\nfunction RoleGroups({\n  roles,\n  projectUsers,\n  project,\n  removeUser,\n  onAddClicked\n}) {\n  return roles.map(role => {\n    const { name, id } = role;\n    const label = name ? `${name}s` : null;\n    return (\n      <RoleField key={`role-${id}`}>\n        <Label>{label}</Label>\n        <ListContainer>\n          <AddButton\n            label=\"New\"\n            item={role}\n            action={onAddClicked}\n          />\n          <UserList\n            list={projectUsers[name]}\n            {...{ role, project, removeUser }}\n          />\n        </ListContainer>\n      </RoleField>\n    );\n  });\n}\n\nexport default React.memo(RoleGroups);\n\nRoleGroups.propTypes = {\n  roles: PropTypes.array,\n  projectUsers: PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport styled from 'styled-components';\nimport Text from './Text';\nimport colors from '../../theme/colors';\n\nconst Content = styled.div`\n  min-width: 200px;\n  width: 30%;\n  max-width: 320;\n  margin: 6px auto;\n  padding: 2px;\n  border-radius: 12px;\n  background-color: ${colors.error};\n  opacity: 0.9;\n`;\n\nconst ErrorIcon = styled(FontAwesomeIcon)`\n  font-size: 14.5px;\n  margin-right: 6px;\n  color: ${colors.primary};\n`;\n\nfunction DynamicMessage({ show, message }) {\n  if (show) {\n    return (\n      <Content>\n        <Text\n          color={colors.primary}\n          align=\"center\"\n        >\n          <ErrorIcon icon={faTimesCircle} />\n          {message}\n        </Text>\n      </Content>\n    );\n  }\n  return null;\n}\n\nDynamicMessage.propTypes = {\n  show: PropTypes.bool,\n  message: PropTypes.string\n};\n\nexport default DynamicMessage;\n","import React, { useState, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport UserSelector from './UserSelector';\nimport RoleGroups from './RoleGroups';\nimport { H2 } from '../../Main/Labels';\nimport DynamicError from '../../Main/DynamicError';\nimport colors from '../../../theme/colors';\nimport mediaQueries from '../../../theme/layout';\n\nconst Content = styled.div`\n  max-width: 420px;\n  width: 100%;\n  margin: 50px auto;\n  padding: 14px;\n  box-sizing: border-box;\n  background-color: ${colors.secondary};\n  border-radius: 12px;\n  @media (max-width: ${mediaQueries.p2}) {\n    margin-top: ${props => (props.expanded ? '24px' : '60px')};\n    max-width: 96%;\n  };\n`;\n\nconst Title = styled(H2)`\n  margin: 8px;\n`;\n\nconst AltContent = styled(Content)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 320px;\n  padding: 20px;\n  margin-top: 120px;\n`;\n\nfunction RolesForm({\n  project,\n  projectUsers,\n  users,\n  addUser,\n  roles,\n  removeUser,\n  error\n}) {\n  const [userSelector, showUserSelector] = useState(false);\n  const [roleForUser, setRoleForUser] = useState({});\n\n  const closeUserSelector = useCallback(() => {\n    showUserSelector(false);\n  }, []);\n\n  const onAddClicked = useCallback(role => {\n    setRoleForUser(role);\n    showUserSelector(true);\n  }, []);\n\n  const onUserSelected = useCallback(user => {\n    showUserSelector(false);\n    addUser(user, project, roleForUser);\n  }, [addUser, project, roleForUser]);\n\n  if (projectUsers) {\n    const title = `Select ${roleForUser.name}`;\n    return (\n      <Content expanded={!!project.name}>\n        <UserSelector\n          isOpen={userSelector}\n          onClose={closeUserSelector}\n          onSelect={onUserSelected}\n          {...{ title, projectUsers, users }}\n        />\n        <Title color={colors.textDark}>\n          {project.name}\n        </Title>\n        <DynamicError show={!!error} message={error} />\n        <RoleGroups\n          {...{ projectUsers, project, onAddClicked, roles, removeUser }}\n        />\n      </Content>\n    );\n  }\n  return (\n    <AltContent>\n      <H2>Select a project . . .</H2>\n    </AltContent>\n  );\n}\n\nexport default RolesForm;\n\nRolesForm.propTypes = {\n  title: PropTypes.string,\n  roles: PropTypes.array,\n  users: PropTypes.array,\n  project: PropTypes.object,\n  projectUsers: PropTypes.object,\n  addUser: PropTypes.func,\n  removeUser: PropTypes.func,\n  error: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { H1 } from './Labels';\nimport colors from '../../theme/colors';\n\nconst HeaderContainer = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 92px;\n  color: ${colors.primaryContrast};\n  background-color: ${colors.primary};\n`;\n\nfunction Header({ title }) {\n  return (\n    <HeaderContainer>\n      <H1 color={colors.primaryContrast}>\n        {title}\n      </H1>\n    </HeaderContainer>\n  );\n}\n\nHeader.propTypes = {\n  title: PropTypes.string\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Header from './Main/Header';\nimport loadingSpinner from '../assets/icons/loading.svg';\n\nexport const AltContent = styled.div`\n  height: 58vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SpinnerIcon = styled.img`\n  width: 80px;\n`;\n\nfunction LoadingContent({ header }) {\n  return (\n    <>\n      <Header title={header} />\n      <AltContent>\n        <SpinnerIcon src={loadingSpinner} alt=\"Loading...\" />\n      </AltContent>\n    </>\n  );\n}\n\nexport default LoadingContent;\n\nLoadingContent.propTypes = {\n  header: PropTypes.string\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Header from './Main/Header';\nimport { H2 } from './Main/Labels';\nimport Text from './Main/Text';\nimport colors from '../theme/colors';\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  max-width: 320px;\n  margin: 8% auto auto auto;\n  padding: 5px 10px 20px 10px;\n  background-color: ${colors.secondary};\n  border-radius: 12px;\n`;\n\nfunction Error({ header, message }) {\n  return (\n    <>\n      <Header title={header} />\n      <Content>\n        <H2>Error!</H2>\n        <Text>{message || 'An error occured!'}</Text>\n      </Content>\n    </>\n  );\n}\n\nexport default Error;\n\nError.propTypes = {\n  header: PropTypes.string,\n  message: PropTypes.string\n};\n","// Export for testing\nexport const responseData = {\n  users: [\n    { id: 1, name: 'John Steve' },\n    { id: 2, name: 'Daniel Santos' },\n    { id: 3, name: 'Maria Delort' }\n  ],\n  roles: [\n    { id: 1, name: 'Admin' },\n    { id: 2, name: 'Editor' },\n    { id: 3, name: 'Viewer' }\n  ],\n  projects: [\n    { id: 1, name: 'Analytics Platform' },\n    { id: 2, name: 'Marketplace' },\n    { id: 3, name: 'Sport Games App' }\n  ],\n  // Retrieving also the map as we also need to retrieve users assigned to projects\n  projectUsersMap: {\n    'Analytics Platform': {\n      AllUsers: {},\n      Admin: [],\n      Editor: [],\n      Viewer: []\n    },\n    Marketplace: {\n      AllUsers: {},\n      Admin: [],\n      Editor: [],\n      Viewer: []\n    },\n    'Sport Games App': {\n      AllUsers: {},\n      Admin: [],\n      Editor: [],\n      Viewer: []\n    }\n  }\n};\n\nconst responses = {\n  '/projects/getProjectLists': responseData,\n  '/projects/users/add': { status: 'Success' },\n  '/projects/users/remove': { status: 'Success' }\n};\n\nconst API = {\n  get: link => Promise.resolve(responses[link]),\n  post: link => Promise.resolve(responses[link]),\n  delete: link => Promise.resolve(responses[link])\n};\n\nexport default API;\n","import * as types from './types';\n\nexport function setError(errorType, errorMsg) {\n  return {\n    type: types.SET_ERROR,\n    error: errorMsg,\n    errorType\n  };\n}\n\nexport function resetError(errorType) {\n  return (dispatch, getState) => {\n    // Check if an error of the given type exists\n    const error = getState().error[errorType];\n    // if it exists, reset...\n    if (error) {\n      dispatch(setError(errorType, null));\n    }\n  };\n}\n","import Api from '../../utilities/devApi';\nimport * as types from './types';\nimport { setError, resetError } from './error';\n\nexport function setProjectUsersMap(list) {\n  return {\n    type: types.SET_PROJECT_MAP,\n    list\n  };\n}\n\nfunction addProjectUser(user, project, role) {\n  return {\n    type: types.ADD_PROJECT_USER,\n    project: project.name,\n    role: role.name,\n    user\n  };\n}\n\nfunction removeProjectUser(userId, projectName, roleName, roleIndex) {\n  return {\n    type: types.REMOVE_PROJECT_USER,\n    project: projectName,\n    role: roleName,\n    roleIndex,\n    userId\n  };\n}\n\nexport function addUser(user, project, role) {\n  return dispatch => {\n    // Resets error (only if an error has already taken place)\n    dispatch(resetError('projects'));\n    const { id: projectId } = project;\n    // Body of a query to an existing server\n    const body = { user, projectId };\n    return Api.post('/projects/users/add', body)\n      .then(res => {\n        if (res.status === 'Success') {\n          dispatch(addProjectUser(user, project, role));\n        } else {\n          dispatch(setError('projectRoles', 'Failed to add user.'));\n        }\n      })\n      .catch(() => {\n        // const errorMsg = err.response ? err.response.data : err.message;\n        dispatch(setError('projectRoles', 'Failed to add user.'));\n      });\n  };\n}\n\nexport function removeUser(userId, project, role, roleIndex) {\n  return dispatch => {\n    // Resets error (only if an error has already taken place)\n    dispatch(resetError('projects'));\n    const { id: projectId, name: projectName } = project;\n    const { name: roleName } = role;\n    // Body of a query to an existing server\n    const body = { projectId, userId };\n    return Api.delete('/projects/users/remove', body)\n      .then(res => {\n        if (res.status === 'Success') {\n          dispatch(removeProjectUser(userId, projectName, roleName, roleIndex));\n        } else {\n          dispatch(setError('projectRoles', 'Failed to remove user.'));\n        }\n      })\n      .catch(() => {\n        // const errorMsg = err.response ? err.response.data : err.message;\n        dispatch(setError('projectRoles', 'Failed to remove user.'));\n      });\n  };\n}\n","// Implement an API in a real case scenario\nexport default () => null;\n","import serverApi from './serverApi';\nimport devApi from './devApi';\n\nconst Api = (process.env.NODE_ENV === 'development') ? devApi : devApi;\n\nexport default Api;\n","import Api from '../../utilities/api';\nimport * as types from './types';\nimport { setProjectUsersMap } from './projectUsers';\nimport { setError, resetError } from './error';\n\nconst errors = {\n  noProjects: 'You haven\\x27t created any projects.',\n  noRoles: 'You haven\\x27t set any roles.',\n  noUsers: 'No users registered.',\n  noProjectUsersMap: 'Error getting existing projects.'\n};\n\nfunction setProjects(list) {\n  return {\n    type: types.SET_PROJECT_LIST,\n    list\n  };\n}\n\nfunction setRoles(list) {\n  return {\n    type: types.SET_ROLE_LIST,\n    list\n  };\n}\n\nfunction setUsers(list) {\n  return {\n    type: types.SET_USER_LIST,\n    list\n  };\n}\n\nexport function getProjectLists() {\n  return (dispatch, getState) => {\n    // Checks if map already exists on state and if it's identical to the one retrieved\n    // Remove this function if the project consists of a server returning updated data\n    const mapExists = newMap => {\n      const oldMap = getState().projectUsersMap;\n      const oldMapArr = Object.keys(oldMap);\n      const newMapArr = Object.keys(newMap);\n      if (newMapArr.length === oldMapArr.length) {\n        // Checks if map object keys are identical\n        const index = newMapArr.findIndex(project => !oldMap[project]);\n        if (index === -1) {\n          return true;\n        }\n        return false;\n      }\n      return false;\n    };\n    // Resets error (only if an error has already taken place)\n    dispatch(resetError('lists'));\n\n    return Api.get('/projects/getProjectLists')\n      .then(lists => {\n        const { projects, roles, users, projectUsersMap } = lists;\n\n        if (projects && projects.length) dispatch(setProjects(projects));\n        else dispatch(setError('lists', errors.noProjects));\n\n        if (roles && roles.length) dispatch(setRoles(roles));\n        else dispatch(setError('lists', errors.noRoles));\n\n        if (users && users.length) dispatch(setUsers(users));\n        else dispatch(setError('lists', errors.noUsers));\n\n        // Remove this condition if the project consists of a server returning updated data\n        const isNewMap = !mapExists(projectUsersMap);\n        if (isNewMap) {\n          if (projectUsersMap) {\n            dispatch(setProjectUsersMap(projectUsersMap));\n          } else {\n            dispatch(setError('lists', errors.noProjectUsersMap));\n          }\n        }\n      })\n      .catch(() => {\n        // const errorMsg = err.response ? err.response.data : err.message;\n        dispatch(setError('lists', 'Network Error'));\n      });\n  };\n}\n","import * as projectUsers from './projectUsers';\nimport * as listings from './listings';\nimport * as error from './error';\n\nconst ActionCreators = { ...projectUsers, ...listings, ...error };\n\nexport default ActionCreators;\n","import { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport Actions from './actions';\n\nfunction ReduxConnector(component) {\n  const mapStateToProps = state => state;\n\n  const mapDispatchToProps = dispatch => bindActionCreators(Actions, dispatch);\n\n  return connect(mapStateToProps, mapDispatchToProps)(component);\n}\n\nexport default ReduxConnector;\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport ProjectSelector from './ProjectSelector';\nimport ProjectRolesForm from './RolesForm';\nimport Header from '../Main/Header';\nimport Loading from '../Loading';\nimport Error from '../Error';\nimport mediaQueries from '../../theme/layout';\nimport ReduxConnector from '../../state/connector';\n\nconst Content = styled.div`\n  display: flex;\n  flex-direction: row-reverse;\n  justify-content: space-between;\n  @media (max-width: ${mediaQueries.p2}) {\n    flex-direction: column;\n  };\n`;\n\nconst header = 'Project Roles';\n\nfunction ProjectRoles({\n  getProjectLists,\n  projectUsersMap,\n  projects,\n  error,\n  ...props\n}) {\n  const [project, setProject] = useState({});\n  const [listsReceived, setListsReceived] = useState(false);\n\n  useEffect(() => {\n    getProjectLists()\n      .then(() => setListsReceived(true));\n  }, [getProjectLists]);\n\n  if (error.lists) {\n    return (<Error message={error.lists} {...{ header }} />);\n  }\n\n  if (!listsReceived) {\n    return (<Loading {...{ header }} />);\n  }\n\n  return (\n    <>\n      <Header title={header} />\n      <Content>\n        <ProjectSelector\n          onSelected={setProject}\n          {...{ projects }}\n        />\n        <ProjectRolesForm\n          projectUsers={projectUsersMap[project.name]}\n          error={error.projectRoles}\n          {...{ project }}\n          {...props}\n        />\n      </Content>\n    </>\n  );\n}\n\nexport default ReduxConnector(ProjectRoles);\n\nProjectRoles.propTypes = {\n  getProjectLists: PropTypes.func,\n  projectUsersMap: PropTypes.object,\n  error: PropTypes.object,\n  projects: PropTypes.array\n};\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { store } from './state/store';\nimport ProjectRolesPage from './components/ProjectRoles';\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Switch>\n          <Route exact path={process.env.PUBLIC_URL}>\n            <ProjectRolesPage />\n          </Route>\n        </Switch>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}